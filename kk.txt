import java.awt.Desktop;
import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.*;

import javax.mail.*;
import javax.mail.internet.*;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.*;

public class newConsolidator {
	private Address[] fromAddress, toAddress;
	private Session session;
	private String content = null;
	private String[] files = { "Roll out Tracker.xlsx" };
	private static String[][] MergeMap;
	private static int startRowIdx = 0;
	private static 	final String regex = "(?<=\\D)(?=\\d)";

	public static void main(String[] args) throws Exception {
		newConsolidator consolidate = new newConsolidator();
		consolidate.setUp().consolidateToMailfile();
		consolidate.close();

	}

	private void consolidateToMailfile() throws Exception, MessagingException {
		try (OutputStream out = new FileOutputStream("consolidate.eml")) {
			generateMessage().writeTo(out);
		}

	}

	private MimeMessage generateMessage() throws Exception {
		MimeMessage msg = new MimeMessage(session);
		msg.addFrom(fromAddress);
		msg.setReplyTo(toAddress);
		msg.setSubject("subject");
		MimeBodyPart textPart = new MimeBodyPart();
		textPart.setText("Body's text (text)", "UTF-8");
		MimeBodyPart htmlPart = new MimeBodyPart();
		htmlPart.setContent(getConsolidatedContent(), "text/html; charset=UTF-8");
		Multipart multiPart = new MimeMultipart("alternative");
		multiPart.addBodyPart(textPart); // first
		multiPart.addBodyPart(htmlPart); // second
		msg.setContent(multiPart);
		msg.addHeader("X-Custom-Header", "CustomValue");
		return msg;
	}

	private String getConsolidatedContent() throws Exception {
		String mainContent = null;
		String header = getContentFrmFile("head");
		String footer = getContentFrmFile("footer");
		content = openAllExcel().createLeaveTable();

		content += getContentFromExcel(files[0], 0, "A5:G15");
		content += getContentFromExcel(files[0], 1, "A2:G24");
		content += getContentFromExcel(files[0], 2, "A2:G11");
		content += getContentFromExcel(files[0], 3, "A2:G11");
		content += getContentFromExcel(files[0], 4, "A2:G23");
		content += getContentFromExcel(files[0], 5, "A2:G13");
		content += getContentFromExcel(files[0], 6, "A2:G11");
		content += getContentFromExcel(files[0], 7, "A2:G13");
		content += getContentFromExcel(files[0], 8, "A2:T22");
		mainContent = header + content + footer;
		return mainContent;
	}

	private newConsolidator openAllExcel() {
		for (int i = 0; i < files.length; i++) {
			try {
				Desktop.getDesktop().open(new File(files[i]));
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return this;
	}

	private void close() throws Exception {
		Thread.sleep(2000);
		Runtime.getRuntime().exec("cmd /c taskkill /f /im excel.exe");

	}

	private newConsolidator setUp() throws Exception {
		String outDirName = "";
		Properties properties = new Properties();
		properties.put("mail.files.path", outDirName);
		session = Session.getDefaultInstance(properties);
		fromAddress = new Address[] { new InternetAddress("abc@test.com") };
		toAddress = new Address[] { new InternetAddress("vaidyanath.prabhakar@capgemini.com") };
		// files = downloadFiles.getFilesPath();
		return this;
	}

	private String getContentFrmFile(String Filename) throws Exception {
		return new String(Files.readAllBytes(Paths.get(Filename)));
	}

	private String getContentFromExcel(String Filename, int summaryPageIndex, String tblIdx)
			throws FileNotFoundException, IOException {
		FileInputStream fis = new FileInputStream(new File(Filename));
		XSSFWorkbook wb = new XSSFWorkbook(fis);

		MergeMap = getContentArray(wb.getSheetAt(summaryPageIndex), tblIdx);
		printarray();
		String leave_content = "";
		leave_content += "<table class=\"MsoNormalTable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"\r\n"
				+ "	width=\"1057\"\r\n"
				+ "	style=\"width: 793.0pt; border-collapse: collapse; mso-yfti-tbllook: 1184; mso-padding-alt: 0in 0in 0in 0in\">\r\n"
				+ "	<tbody>";
		for (int i = 0; i < MergeMap.length; i++) {
			
			leave_content += "<tr style=\"mso-yfti-irow: 0; "
					+ ((i == 0) ? "mso-yfti-firstrow: yes" : (i == MergeMap.length - 1) ? "mso-yfti-lastrow: yes" : "")
					+ "; height: " + ((i == 1) ? "24.5pt" : "14.5pt") + " \">";

			leave_content += getEachRowContent(wb.getSheetAt(summaryPageIndex), i, startRowIdx);
			leave_content += "</tr>";

		}
		leave_content += "</tbody></table>";
		leave_content += "<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>\r\n" + "\r\n"
				+ "		<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>\r\n" + "\r\n"
				+ "		<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>";

		return leave_content;
	}

	String root = null;

	private String[][] getContentArray(XSSFSheet xssfSheet, String tblIdx) {

	
		String[] splitedByColon = getSplited(tblIdx, ":"), startRow = getSplited(splitedByColon[0], regex),
				endRow = getSplited(splitedByColon[1], regex);

		String[][] arr = new String[(Integer.parseInt(endRow[1]) - Integer.parseInt(startRow[1])) +1][getColumnIdx(endRow[0])
				- getColumnIdx(startRow[0]) + 1];
		startRowIdx = Integer.parseInt(startRow[1]);
		System.out.println(arr.length + " " + arr[0].length);
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) {
				// // System.out.println(i + " " + j);
				root = "";
				if (getMergedRegionForCell(xssfSheet.getRow(i + (startRowIdx -1)).getCell(j)) != null) {
					root = "" + getMergedRegionForCell(xssfSheet.getRow(i + (startRowIdx -1)).getCell(j));
				}

				if (xssfSheet.getRow(i + (startRowIdx -1)).getCell(j).getCellType() == CellType.STRING
						|| xssfSheet.getRow(i + (startRowIdx -1)).getCell(j).getCellType() == CellType.BLANK) {
					arr[i][j] = ((root.equals("") || root.equals(null)) ? ""
							: root.substring(root.indexOf("[") + 1, root.indexOf("]")) + "--$")
							+ xssfSheet.getRow(i + (startRowIdx -1)).getCell(j).getStringCellValue();

				} else {
					arr[i][j] = ((root.equals("") || root.equals(null)) ? ""
							: root.substring(root.indexOf("[") + 1, root.indexOf("]")) + "--$")
							+ xssfSheet.getRow(i + (startRowIdx -1)).getCell(j).getRawValue() + "";

				}
			}
		}
		return arr;
	}

	/**
	 * @param tblIdx
	 * @return
	 */
	public static String[] getSplited(String tblIdx, String regex) {
		return tblIdx.split(regex);
	}

	public CellRangeAddress getMergedRegionForCell(Cell c) {
		Sheet s = c.getRow().getSheet();
		for (CellRangeAddress mergedRegion : s.getMergedRegions()) {
			if (mergedRegion.isInRange(c.getRowIndex(), c.getColumnIndex())) {

				return mergedRegion;
			}
		}

		return null;
	}

	private static String getEachRowContent(XSSFSheet xssfSheet, int i, int startRowIndex) {
		String content = "";

		String rowspan = "", colspan = "", arrayValue = "";
		for (int j = 0; j < MergeMap[i].length; j++) {
			XSSFFont font = xssfSheet.getRow(i+startRowIndex -1).getCell(j).getCellStyle().getFont();
			arrayValue = MergeMap[i][j];
			if (arrayValue.contains("--")) {
				String[] splitedString = getSplited(arrayValue,"--");
				
				if (splitedString[0].substring(0, 1).equals(splitedString[0]
						.substring(splitedString[0].indexOf(":") + 1, splitedString[0].indexOf(":") + 2))) {
					String[] splitUsingColon = getSplited(splitedString[0], ":"); // rowmerge-
																			// rowspan

					int startnumb = Integer.parseInt(splitUsingColon[0].substring(1));
					int endnumb = Integer.parseInt(splitUsingColon[1].substring(1)), diff = 0;
					diff = endnumb - startnumb;
					diff = diff + 1;
					if (!splitedString[1].equals("$")) {
						content += printElement(xssfSheet, i, j, "", diff + "", startRowIndex -1);
						content += " <o:p></o:p>\r\n" + "</span> " + ((font.getBold() == false) ? "" : " </b>\r\n") + "</p>" + " </td>";
					}
				} else if (!splitedString[0].substring(0, 1).equals(splitedString[0]
						.substring(splitedString[0].indexOf(":") + 1, splitedString[0].indexOf(":") + 2))) {
					String[] splitUsingColon = getSplited(splitedString[0], ":"); // colmerge
																			// --
																			// colspan
					String startLetter = splitUsingColon[0].substring(0, 1),
							endLetter = splitUsingColon[1].substring(0, 1);
					int startId = getColumnIdx(startLetter), endId = getColumnIdx(endLetter), diff = 0;
					diff = endId - startId;
					diff = diff + 1;
					if (!splitedString[1].equals("$")) {
						content += printElement(xssfSheet, i, j, diff + "", "", startRowIndex -1);
						content += " <o:p></o:p>\r\n" + "</span> " + ((font.getBold() == false) ? "" : " </b>\r\n") + "</p>" + " </td>";
					}
				}

			} else {
				content += printElement(xssfSheet, i, j, "", "", startRowIndex-1);
				content += " <o:p></o:p>\r\n" + "</span> " +  ((font.getBold() == false) ? "" : " </b>\r\n") + "</p>" + " </td>";

			}

		}

		return content;
	}

	public static int getColumnIdx(String column) {
		char[] arr = column.toCharArray();
		char temp = 'A';
		int index = 0;
		for (int i = 0; i < arr.length; i++) {
			temp = arr[i];
			int j = 0;
			for (char a = 'A'; a <= 'Z'; a++) {
				if (temp == a) {
					index += j;
					break;
				}
				j++;
			}
			index = j;
		}
		return index;
	}

	public static String printElement(XSSFSheet xssfSheet, int i, int j, String colspan, String rowspan, int startRowIdx) {
		String content = "";
		XSSFCellStyle cellStyle = xssfSheet.getRow(i + startRowIdx).getCell(j).getCellStyle();
		XSSFColor color = xssfSheet.getRow(i + startRowIdx).getCell(j).getCellStyle()
				.getFillForegroundColorColor();
		content += "<td width=\""
				+ ((j == xssfSheet.getRow(i + startRowIdx).getLastCellNum()) ? "135" : "104")
				+ "\" nowrap=\"\" " + ((colspan.equals("")) ? "" : "colspan=\"" + colspan + "\"") + " "
				+ ((rowspan.equals("")) ? "" : "rowspan=\"" + rowspan + "\"") + " valign=\"center\"" + " " + " "
				+ " style=\"" + "  border:solid #A6A6A6 1.0pt;"
				+ ((color != null) ? "background:#" + color.getARGBHex().toLowerCase().substring(2)
						: "background:#ffffff")
				+ ";padding:0in 5.4pt 0in 5.4pt;" + "  height:15.0pt\">"
				+ "    <p class=\"MsoNormal\" align=\"left\" style=\"\">\r\n" + ((cellStyle.getFont().getBold() == false) ? "" : " <b>\r\n")
				+ " <span style=\"color:#"
				+ cellStyle.getFont().getXSSFColor().getARGBHex().toLowerCase().substring(2) + ";font-size:"
						+((i==0)? "11.pt": "9.pt;")+ "  \">";
		if (xssfSheet.getRow(i + startRowIdx).getCell(j).getCellType() == CellType.STRING
				|| xssfSheet.getRow(i + startRowIdx).getCell(j).getCellType() == CellType.BLANK) {
			content += xssfSheet.getRow(i + startRowIdx).getCell(j).getStringCellValue();
		} else {
			content += xssfSheet.getRow(i + startRowIdx).getCell(j).getRawValue();
		}
		return content;
	}

	private static void printarray() {
		for (int i = 0; i < MergeMap.length; i++) {
			for (int j = 0; j < MergeMap[i].length; j++) {
				System.out.print(MergeMap[i][j] + " \t");
			}
			System.out.print("\n");
		}
		System.out.println("\n\n\n\n");
	}

	private String createLeaveTable() throws IOException, Exception {

		Thread.sleep(5000);
		String content = "";
		content += "<table class=\"MsoNormalTable\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\" width=\"1020\" style=\"width:764.7pt;border-collapse:collapse;mso-yfti-tbllook:\r\n"
				+ " 1184;mso-table-lspace:9.0pt;margin-left:6.75pt;mso-table-rspace:9.0pt;\r\n"
				+ " margin-right:6.75pt;mso-table-anchor-vertical:paragraph;mso-table-anchor-horizontal:\r\n"
				+ " column;mso-table-left:left;mso-padding-alt:0in 0in 0in 0in\"><tbody>";
		content += "<tr style=\"mso-yfti-irow:0;mso-yfti-firstrow:yes;height:11.5pt\">\r\n"
				+ "			<td width=\"1020\" nowrap=\"\" colspan=\"4\" style=\"width:764.7pt;border:solid windowtext 1.0pt;\r\n"
				+ "  background:#FFE699;padding:0in 5.4pt 0in 5.4pt;height:11.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" align=\"center\" style=\"text-align:center;mso-element:frame;\r\n"
				+ "  mso-element-frame-hspace:9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:\r\n"
				+ "  paragraph;mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<b>\r\n"
				+ "						<span style=\"font-size:10.0pt;color:black\">R2 State Rollout Leave </span>\r\n"
				+ "					</b>\r\n" + "					<b>\r\n"
				+ "						<span style=\"font-size:10.0pt\">Summary for 29<sup>th </sup>October<o:p/>\r\n"
				+ "						</span>\r\n" + "					</b>\r\n" + "				</p>\r\n"
				+ "			</td>\r\n" + "		</tr>";
		content += " <tr style=\"mso-yfti-irow:1;height:7.5pt\">\r\n"
				+ "			<td width=\"139\" nowrap=\"\" valign=\"bottom\" style=\"width:103.9pt;border:solid windowtext 1.0pt;\r\n"
				+ "  border-top:none;background:#BDD7EE;padding:0in 5.4pt 0in 5.4pt;height:7.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" align=\"center\" style=\"text-align:center;mso-element:frame;\r\n"
				+ "  mso-element-frame-hspace:9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:\r\n"
				+ "  paragraph;mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<b>\r\n"
				+ "						<span style=\"font-size:10.0pt;color:black\">Total FTEs<o:p/>\r\n"
				+ "						</span>\r\n" + "					</b>\r\n" + "				</p>\r\n"
				+ "			</td>\r\n"
				+ "			<td width=\"289\" nowrap=\"\" valign=\"bottom\" style=\"width:216.75pt;border-top:none;\r\n"
				+ "  border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n"
				+ "  background:#BDD7EE;padding:0in 5.4pt 0in 5.4pt;height:7.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" align=\"center\" style=\"text-align:center;mso-element:frame;\r\n"
				+ "  mso-element-frame-hspace:9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:\r\n"
				+ "  paragraph;mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<b>\r\n"
				+ "						<span style=\"font-size:10.0pt;color:black\">Planned Leaves<o:p/>\r\n"
				+ "						</span>\r\n" + "					</b>\r\n" + "				</p>\r\n"
				+ "			</td>\r\n"
				+ "			<td width=\"265\" nowrap=\"\" valign=\"bottom\" style=\"width:198.45pt;border-top:none;\r\n"
				+ "  border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n"
				+ "  background:#BDD7EE;padding:0in 5.4pt 0in 5.4pt;height:7.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" align=\"center\" style=\"text-align:center;mso-element:frame;\r\n"
				+ "  mso-element-frame-hspace:9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:\r\n"
				+ "  paragraph;mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<b>\r\n"
				+ "						<span style=\"font-size:10.0pt;color:black\">Un</span>\r\n"
				+ "					</b>\r\n" + "					<b>\r\n"
				+ "						<span style=\"font-size:\r\n"
				+ "  10.0pt\">p<span style=\"color:black\">lanned Leaves<o:p/>\r\n"
				+ "							</span>\r\n" + "						</span>\r\n"
				+ "					</b>\r\n" + "				</p>\r\n" + "			</td>\r\n"
				+ "			<td width=\"327\" nowrap=\"\" valign=\"bottom\" style=\"width:245.6pt;border-top:none;\r\n"
				+ "  border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n"
				+ "  background:#BDD7EE;padding:0in 5.4pt 0in 5.4pt;height:7.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" align=\"center\" style=\"text-align:center;mso-element:frame;\r\n"
				+ "  mso-element-frame-hspace:9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:\r\n"
				+ "  paragraph;mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<b>\r\n"
				+ "						<span style=\"font-size:10.0pt;color:black\">Work from Home<o:p/>\r\n"
				+ "						</span>\r\n" + "					</b>\r\n" + "				</p>\r\n"
				+ "			</td>\r\n" + "		</tr>";
		content += "<tr style=\"mso-yfti-irow:2;height:9.5pt\">\r\n"
				+ "			<td width=\"139\" nowrap=\"\" valign=\"bottom\" style=\"width:103.9pt;border:solid windowtext 1.0pt;\r\n"
				+ "  border-top:none;background:#BDD7EE;padding:0in 5.4pt 0in 5.4pt;height:9.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" align=\"center\" style=\"text-align:center;mso-element:frame;\r\n"
				+ "  mso-element-frame-hspace:9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:\r\n"
				+ "  paragraph;mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<span style=\"font-size:10.0pt\">::84<span style=\"color:black\">\r\n"
				+ "							<o:p/>\r\n" + "						</span>\r\n"
				+ "					</span>\r\n" + "				</p>\r\n" + "			</td>\r\n"
				+ "			<td width=\"289\" nowrap=\"\" valign=\"bottom\" style=\"width:216.75pt;border-top:none;\r\n"
				+ "  border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n"
				+ "  background:#BDD7EE;padding:0in 5.4pt 0in 5.4pt;height:9.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" align=\"center\" style=\"text-align:center;mso-element:frame;\r\n"
				+ "  mso-element-frame-hspace:9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:\r\n"
				+ "  paragraph;mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<span style=\"font-size:10.0pt\">::2<span style=\"color:black\">\r\n"
				+ "							<o:p/>\r\n" + "						</span>\r\n"
				+ "					</span>\r\n" + "				</p>\r\n" + "			</td>\r\n"
				+ "			<td width=\"265\" nowrap=\"\" valign=\"bottom\" style=\"width:198.45pt;border-top:none;\r\n"
				+ "  border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n"
				+ "  background:#BDD7EE;padding:0in 5.4pt 0in 5.4pt;height:9.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" align=\"center\" style=\"text-align:center;mso-element:frame;\r\n"
				+ "  mso-element-frame-hspace:9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:\r\n"
				+ "  paragraph;mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<span style=\"font-size:10.0pt\">::1<span style=\"color:black\">\r\n"
				+ "							<o:p/>\r\n" + "						</span>\r\n"
				+ "					</span>\r\n" + "				</p>\r\n" + "			</td>\r\n"
				+ "			<td width=\"327\" nowrap=\"\" valign=\"bottom\" style=\"width:245.6pt;border-top:none;\r\n"
				+ "  border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n"
				+ "  background:#BDD7EE;padding:0in 5.4pt 0in 5.4pt;height:9.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" style=\"mso-element:frame;mso-element-frame-hspace:9.0pt;\r\n"
				+ "  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:\r\n"
				+ "  column;mso-height-rule:exactly\">\r\n"
				+ "					<span style=\"font-size:10.0pt\">1<span style=\"color:black\">\r\n"
				+ "							<o:p/>\r\n" + "						</span>\r\n"
				+ "					</span>\r\n" + "				</p>\r\n" + "			</td>\r\n" + "		</tr>";
		content += "<tr style=\"mso-yfti-irow:3;mso-yfti-lastrow:yes;height:9.5pt\">\r\n"
				+ "			<td width=\"139\" nowrap=\"\" valign=\"top\" style=\"width:103.9pt;border:solid windowtext 1.0pt;\r\n"
				+ "  border-top:none;background:white;padding:0in 5.4pt 0in 5.4pt;height:9.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" style=\"mso-element:frame;mso-element-frame-hspace:9.0pt;\r\n"
				+ "  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:\r\n"
				+ "  column;mso-height-rule:exactly\">\r\n"
				+ "					<span style=\"font-size:10.0pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n"
				+ "						<span style=\"color:black\">\r\n" + "							<o:p/>\r\n"
				+ "						</span>\r\n" + "					</span>\r\n" + "				</p>\r\n"
				+ "			</td>\r\n"
				+ "			<td width=\"289\" nowrap=\"\" valign=\"top\" style=\"width:216.75pt;border-top:none;\r\n"
				+ "  border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n"
				+ "  background:white;padding:0in 5.4pt 0in 5.4pt;height:9.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" style=\"margin-left:.75in;text-indent:-.25in;mso-list:l1 level1 lfo3;\r\n"
				+ "  mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n"
				+ "  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:column;\r\n"
				+ "  mso-height-rule:exactly\">\r\n" + "					<!--[if !supportLists]-->\r\n"
				+ "					<span style=\"font-size:9.0pt;\r\n"
				+ "  mso-fareast-font-family:Calibri;mso-bidi-font-family:Calibri\">\r\n"
				+ "						<span style=\"mso-list:Ignore\">1.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n"
				+ "							</span>\r\n" + "						</span>\r\n"
				+ "					</span>\r\n" + "					<!--[endif]-->\r\n"
				+ "					<span style=\"font-size:9.0pt;mso-fareast-font-family:\r\n"
				+ "  &quot;Times New Roman&quot;\">Gautami Kadasani<o:p/>\r\n" + "					</span>\r\n"
				+ "				</p>\r\n"
				+ "				<p class=\"MsoNormal\" style=\"margin-left:.75in;text-indent:-.25in;mso-list:l1 level1 lfo3;\r\n"
				+ "  mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n"
				+ "  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:column;\r\n"
				+ "  mso-height-rule:exactly\">\r\n" + "					<!--[if !supportLists]-->\r\n"
				+ "					<span style=\"font-size:9.0pt;\r\n"
				+ "  mso-fareast-font-family:Calibri;mso-bidi-font-family:Calibri;color:black\">\r\n"
				+ "						<span style=\"mso-list:Ignore\">2.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n"
				+ "							</span>\r\n" + "						</span>\r\n"
				+ "					</span>\r\n" + "					<!--[endif]-->\r\n"
				+ "					<span style=\"font-size:9.0pt;mso-fareast-font-family:\r\n"
				+ "  &quot;Times New Roman&quot;;color:black\">Prabhu Radhakrishnan<o:p/>\r\n"
				+ "					</span>\r\n" + "				</p>\r\n"
				+ "				<p class=\"MsoNormal\" style=\"margin-bottom:12.0pt;mso-element:frame;mso-element-frame-hspace:\r\n"
				+ "  9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:paragraph;\r\n"
				+ "  mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<o:p>&nbsp;</o:p>\r\n" + "				</p>\r\n"
				+ "				<p class=\"MsoNormal\" style=\"mso-element:frame;mso-element-frame-hspace:9.0pt;\r\n"
				+ "  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:\r\n"
				+ "  column;mso-height-rule:exactly\">\r\n" + "					<o:p>&nbsp;</o:p>\r\n"
				+ "				</p>\r\n"
				+ "				<p class=\"MsoNormal\" style=\"margin-left:.25in;mso-element:frame;mso-element-frame-hspace:\r\n"
				+ "  9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:paragraph;\r\n"
				+ "  mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<o:p>&nbsp;</o:p>\r\n" + "				</p>\r\n" + "			</td>\r\n"
				+ "			<td width=\"265\" nowrap=\"\" valign=\"top\" style=\"width:198.45pt;border-top:none;\r\n"
				+ "  border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n"
				+ "  background:white;padding:0in 5.4pt 0in 5.4pt;height:9.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" style=\"margin-left:.25in;mso-element:frame;mso-element-frame-hspace:\r\n"
				+ "  9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:paragraph;\r\n"
				+ "  mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<span style=\"font-size:9.0pt;color:black\">1. &nbsp;&nbsp;</span>\r\n"
				+ "					<span style=\"font-size:9.0pt\">\r\n"
				+ "						<span style=\"color:black\">&nbsp;</span>\r\n" + "					</span>\r\n"
				+ "					<span style=\"font-size:9.0pt\">Suganyha Manoharan<span style=\"color:black\">\r\n"
				+ "							<o:p/>\r\n" + "						</span>\r\n"
				+ "					</span>\r\n" + "				</p>\r\n" + "			</td>\r\n"
				+ "			<td width=\"327\" nowrap=\"\" valign=\"top\" style=\"width:245.6pt;border-top:none;\r\n"
				+ "  border-left:none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n"
				+ "  background:white;padding:0in 5.4pt 0in 5.4pt;height:9.5pt\">\r\n"
				+ "				<p class=\"MsoNormal\" style=\"margin-left:2.0in;text-indent:-.25in;mso-list:l2 level4 lfo6;\r\n"
				+ "  mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n"
				+ "  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:column;\r\n"
				+ "  mso-height-rule:exactly\">\r\n" + "					<!--[if !supportLists]-->\r\n"
				+ "					<span style=\"font-size:9.0pt;\r\n"
				+ "  mso-fareast-font-family:Calibri;mso-bidi-font-family:Calibri\">\r\n"
				+ "						<span style=\"mso-list:Ignore\">1.<span style=\"font:7.0pt &quot;Times New Roman&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n"
				+ "							</span>\r\n" + "						</span>\r\n"
				+ "					</span>\r\n" + "					<!--[endif]-->\r\n"
				+ "					<span style=\"font-size:9.0pt;mso-fareast-font-family:\r\n"
				+ "  &quot;Times New Roman&quot;\">Karuna<o:p/>\r\n" + "					</span>\r\n"
				+ "				</p>\r\n"
				+ "				<p class=\"MsoListParagraph\" style=\"margin-left:2.0in;mso-element:frame;\r\n"
				+ "  mso-element-frame-hspace:9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:\r\n"
				+ "  paragraph;mso-element-anchor-horizontal:column;mso-height-rule:exactly\">\r\n"
				+ "					<span style=\"font-size:9.0pt\">\r\n"
				+ "						<o:p>&nbsp;</o:p>\r\n" + "					</span>\r\n"
				+ "				</p>\r\n"
				+ "				<p class=\"MsoNormal\" style=\"mso-element:frame;mso-element-frame-hspace:9.0pt;\r\n"
				+ "  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:\r\n"
				+ "  column;mso-height-rule:exactly\">\r\n" + "					<span style=\"font-size:9.0pt\">\r\n"
				+ "						<o:p>&nbsp;</o:p>\r\n" + "					</span>\r\n"
				+ "				</p>\r\n"
				+ "				<p class=\"MsoNormal\" style=\"mso-element:frame;mso-element-frame-hspace:9.0pt;\r\n"
				+ "  mso-element-wrap:around;mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:\r\n"
				+ "  column;mso-height-rule:exactly\">\r\n"
				+ "					<span style=\"font-size:9.0pt\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n"
				+ "						<o:p/>\r\n" + "					</span>\r\n" + "				</p>\r\n"
				+ "			</td>\r\n" + "		</tr>";

		content += "</tbody></table>";
		content += "<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>\r\n" + "\r\n"
				+ "		<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>\r\n" + "\r\n"
				+ "		<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>";
		content += "<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>\r\n" + "\r\n"
				+ "		<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>\r\n" + "\r\n"
				+ "		<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>";
		content += "<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>\r\n" + "\r\n"
				+ "		<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>\r\n" + "\r\n"
				+ "		<p class=MsoNormal>\r\n" + "	<o:p>&nbsp;</o:p>\r\n" + "		</p>";

		return content;
	}

	public static String Column(int column) {
		if (column >= 0 && column < 26)
			return ((char) ('A' + column)) + "";
		else if (column > 25) {
			return Column(column / 26) + Column(column % 26 + 1) + "";
		}
		return null;
	}

	public void convertCol2Num(String str) {
		String[] part = str.split("(?<=\\D)(?=\\d)");
		System.out.println(part[0]);
		System.out.println(part[1]);
	}

}
